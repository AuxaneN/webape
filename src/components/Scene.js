/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import React, { useRef } from "react"
import { useFrame, useThree } from "react-three-fiber"
// import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader"
import { useGLTF } from '@react-three/drei/useGLTF'
import lerp from "lerp"

export default function Model({ mouse }) {
  const group = useRef()

  const { nodes, materials } = useGLTF("/monkey/scene.gltf")
  const { viewport } = useThree()
  const aspect = viewport.factor
  useFrame(state => {
    if (
      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        navigator.userAgent
      )
    ) {
      if (group.current) {
        group.current.rotation.x = lerp(
          group.current.rotation.x,
          mouse.current[1] / aspect / 10,
          0.1
        )
        group.current.rotation.y = lerp(
          group.current.rotation.y,
          mouse.current[0] / aspect / 15,
          0.1
        )
        // group.current.rotation.y = 0.8
      }
    } else {
      if (group.current) {
        group.current.rotation.x = lerp(
          group.current.rotation.x,
          mouse.current[1] / aspect / 50,
          0.1
        )
        group.current.rotation.y = lerp(
          group.current.rotation.y,
          0 + mouse.current[0] / aspect / 100,
          0.1
        )
        // group.current.rotation.y = 0.8
      }
    }
  })

  return (
    <group ref={group} dispose={null}>
      <mesh
        material={materials.lambert3}
        geometry={nodes.LowPoly_Edit4.geometry}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[1, 1, 1]}     
      />
    </group>
  )
}